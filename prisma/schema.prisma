generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  access_token      String
  expires_at        BigInt?
  id_token          String?
  provider          String
  providerAccountId String
  scope             String
  token_type        String
  type              String
  userId            String  @db.ObjectId

  @@unique([provider, providerAccountId])
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?  @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  conversationIds String[] @db.ObjectId
  conversations   Conversation[] @relation(fields: [conversationIds], references: [id])

  seenMessageIds  String[] @db.ObjectId
  seenMessages    Message[] @relation(fields: [seenMessageIds], references: [id])

  accounts        Account[]
  messages        Message[]
}

model Message {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  body           String?
  image          String?
  createdAt      DateTime @default(now())

  seenIds        String[] @db.ObjectId
  seen           User[]   @relation(fields: [seenIds], references: [id])

  conversationId String   @db.ObjectId
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  senderId       String   @db.ObjectId
  sender         User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

model Conversation {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name          String?
  isGroup       Boolean?

  messagesIds   String[] @db.ObjectId
  messages      Message[]

  userIds       String[] @db.ObjectId
  users         User[]  @relation(fields: [userIds], references: [id])
}



